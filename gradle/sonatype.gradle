
ext {

    sonatypeBaseUrl = "https://oss.sonatype.org"
    sonatypeSnapshotUrl = "$sonatypeBaseUrl/content/repositories/snapshots/"
    sonatypeRepositoryUrl = "$sonatypeBaseUrl/content/groups/public"
    sonatypeReleaseUrl = "$sonatypeBaseUrl/service/local/staging/deploy/maven2/"
    sonatypeUploadUrl = isSnapshot ? sonatypeSnapshotUrl : sonatypeReleaseUrl
    sonatypeUsername = hasProperty('sonatypeUsername') ? sonatypeUsername : System.getenv('sonatypeUsername')
    sonatypePassword = hasProperty('sonatypePassword') ? sonatypePassword : System.getenv('sonatypePassword')

    projectUrl = "https://github.com/Frege/frege-native-gen"
    projectName = "Frege Native Gen"
    pomProjectName = projectName
    baseJarName = "gradle-native-gen"

    groupName = "org.frege-lang"
    scmUrl = "git://github.com/Frege/frege-native-gen.git"
    scmGitFile = "scm:git@github.com:Frege/frege-native-gen.git"
    projectDescription = "Frege Native Gen"

    licenseName = "BSD 3-clause license"
    licenseUrl = 'http://opensource.org/licenses/BSD-3-Clause'

    organisation = groupName

    primaryEmail = "frege-programming-language@googlegroups.com"

}

Boolean doSigning() {
    signingEnabled.trim() == "true"
}

task javadocJar(type: Jar, dependsOn: "javadoc") {
    classifier = 'javadoc'
    from "build/docs/javadoc"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    required { doSigning() }
    sign configurations.archives
}

uploadArchives {
    enabled = true
    repositories {
        mavenDeployer {
            if (doSigning()) {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            }

            repository(url: sonatypeUploadUrl) {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            pom {
                groupId = groupName
                project {
                    name pomProjectName
                    packaging 'jar'
                    description projectDescription
                    url projectUrl
                    organization {
                        name pomProjectName
                        url projectUrl
                    }
                    scm {
                        url scmUrl
                    }
                    licenses {
                        license {
                            name licenseName
                            url licenseUrl
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            email primaryEmail
                        }
                    }
                }
            }
        }
    }
}